/**
 * httpbin.org
 * A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>
 *
 * The version of the OpenAPI document: 0.9.2
 * Contact: me@kennethreitz.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';



import { Configuration }                                     from '../configuration';


export interface CacheGetRequestParams {
    ifModifiedSince?: any;
    ifNoneMatch?: any;
}

export interface CacheValueGetRequestParams {
    value: number;
}

export interface EtagEtagGetRequestParams {
    ifNoneMatch?: any;
    ifMatch?: any;
}

export interface ResponseHeadersGetRequestParams {
    freeform?: any;
}

export interface ResponseHeadersPostRequestParams {
    freeform?: any;
}


export interface ResponseInspectionServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Returns a 304 if an If-Modified-Since header or If-None-Match is present. Returns the same as a GET otherwise.
     * 
* @param requestParameters
     */
    cacheGet(requestParameters: CacheGetRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Sets a Cache-Control header for n seconds.
     * 
* @param requestParameters
     */
    cacheValueGet(requestParameters: CacheValueGetRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Assumes the resource has the given etag and responds to If-None-Match and If-Match headers appropriately.
     * 
* @param requestParameters
     */
    etagEtagGet(requestParameters: EtagEtagGetRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Returns a set of response headers from the query string.
     * 
* @param requestParameters
     */
    responseHeadersGet(requestParameters: ResponseHeadersGetRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Returns a set of response headers from the query string.
     * 
* @param requestParameters
     */
    responseHeadersPost(requestParameters: ResponseHeadersPostRequestParams, extraHttpRequestParams?: any): Observable<{}>;

}
