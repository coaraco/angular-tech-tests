/**
 * httpbin.org
 * A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>
 *
 * The version of the OpenAPI document: 0.9.2
 * Contact: me@kennethreitz.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';



import { Configuration }                                     from '../configuration';


export interface BasicAuthUserPasswdGetRequestParams {
    user: string;
    passwd: string;
}

export interface BearerGetRequestParams {
    authorization?: any;
}

export interface DigestAuthQopUserPasswdAlgorithmGetRequestParams {
    qop: string;
    user: string;
    passwd: string;
    algorithm: string;
}

export interface DigestAuthQopUserPasswdAlgorithmStaleAfterGetRequestParams {
    qop: string;
    user: string;
    passwd: string;
    algorithm: string;
    staleAfter: string;
}

export interface DigestAuthQopUserPasswdGetRequestParams {
    qop: string;
    user: string;
    passwd: string;
}

export interface HiddenBasicAuthUserPasswdGetRequestParams {
    user: string;
    passwd: string;
}


export interface AuthServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Prompts the user for authorization using HTTP Basic Auth.
     * 
* @param requestParameters
     */
    basicAuthUserPasswdGet(requestParameters: BasicAuthUserPasswdGetRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Prompts the user for authorization using bearer authentication.
     * 
* @param requestParameters
     */
    bearerGet(requestParameters: BearerGetRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Prompts the user for authorization using Digest Auth + Algorithm.
     * 
* @param requestParameters
     */
    digestAuthQopUserPasswdAlgorithmGet(requestParameters: DigestAuthQopUserPasswdAlgorithmGetRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Prompts the user for authorization using Digest Auth + Algorithm.
     * allow settings the stale_after argument. 
* @param requestParameters
     */
    digestAuthQopUserPasswdAlgorithmStaleAfterGet(requestParameters: DigestAuthQopUserPasswdAlgorithmStaleAfterGetRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Prompts the user for authorization using Digest Auth.
     * 
* @param requestParameters
     */
    digestAuthQopUserPasswdGet(requestParameters: DigestAuthQopUserPasswdGetRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Prompts the user for authorization using HTTP Basic Auth.
     * 
* @param requestParameters
     */
    hiddenBasicAuthUserPasswdGet(requestParameters: HiddenBasicAuthUserPasswdGetRequestParams, extraHttpRequestParams?: any): Observable<{}>;

}
